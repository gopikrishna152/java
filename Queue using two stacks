import java.util.*;

public class Queue_using_two_stacks {
    static class Queue {
        static java.util.Stack<Integer> s1 = new java.util.Stack();
        static java.util.Stack<Integer> s2 = new java.util.Stack();

        public static boolean isempty() {
            return s1.isEmpty();
        }

        public void add(int data) {
            while (!s1.isEmpty()) {
                s2.push(s1.pop());
            }
            s1.push(data);
            while (!s2.isEmpty()) {
                s1.push(s2.pop());

            }
        }

        public int remove() {
            if (isempty()) {
                System.out.println("empty");
                return -1;
            }
            return s1.pop();

        }

        public int peek() {
            if (isempty()) {
                System.out.println("empty");
                return -1;
            }
            return s1.peek();

        }
    }

    public static void main(String[] args) {
        Queue q = new Queue();
        q.add(1);
        q.add(2);
        q.add(3);
        q.add(4);

        // q.remove();
        // q.remove();
        while (!q.isempty()) {
            System.out.println(q.peek());
            q.remove();
        }
    }
}
